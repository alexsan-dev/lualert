{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["Styles","alertContainer","width","height","position","minWidth","top","left","zIndex","transition","background","display","justifyContent","alignItems","margin","padding","boxSizing","fontSize","alertContent","maxWidth","transitionTimingFunction","boxShadow","borderRadius","fontFamily","alertContent_h1","color","marginBottom","fontWeight","alertContent_p","lineHeight","alertActions","marginTop","listStyle","alertActions_li_button","textTransform","border","overflow","outline","cursor","cancelBtn","closeAlert","opacity","pointerEvents","openAlert","openContent","transform","closeContent","defState","customElements","confirmText","cancelText","confirmBtn","onConfirm","onHide","fixed","type","open","title","body","AlertTemplate","show","props","this","setState","hide","state","forceHide","setTimeout","confirm","render","onClick","undefined","style","backdropFilter","blurred","errColor","confirmColor","PureComponent","withAlerts","Component","emptyAlert","React","ref","window","AlertRef","Alert","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f292e7d2.chunk.js","sourcesContent":["// REACT\nimport React, { CSSProperties, PureComponent } from 'react'\n\n// STYLES\nconst Styles: {\n  alertContainer: CSSProperties\n  alertContent: CSSProperties\n  alertContent_h1: CSSProperties\n  alertContent_p: CSSProperties\n  alertActions: CSSProperties\n  alertActions_li_button: CSSProperties\n  cancelBtn: CSSProperties\n  closeAlert: CSSProperties\n  openAlert: CSSProperties\n  openContent: CSSProperties\n  closeContent: CSSProperties\n} = {\n  alertContainer: {\n    width: '100%',\n    height: '100vh',\n    position: 'fixed',\n    minWidth: '100%',\n    top: '0',\n    left: '0',\n    zIndex: 100,\n    transition: 'opacity 0.2s ease-in-out',\n    background: 'rgba(0, 0, 0, 0.6)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 0,\n    padding: 0,\n    boxSizing: 'border-box',\n    fontSize: '16px'\n  },\n  alertContent: {\n    left: '50%',\n    padding: '30px',\n    width: 'calc(100% - 60px)',\n    maxWidth: '455px',\n    transition: 'transform 0.2s linear 0.2s, opacity 0.2s linear 0.2s',\n    transitionTimingFunction: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',\n    background: '#fff',\n    margin: 0,\n    boxSizing: 'border-box',\n    zIndex: 2,\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.3)',\n    borderRadius: '10px',\n    fontFamily:\n      \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\n  },\n  alertContent_h1: {\n    color: '#333',\n    fontSize: '2em',\n    margin: 0,\n    marginBottom: '10px',\n    boxSizing: 'border-box',\n    fontWeight: 'bold'\n  },\n  alertContent_p: {\n    color: '#333',\n    lineHeight: '20px',\n    margin: 0,\n    boxSizing: 'border-box'\n  },\n  alertActions: {\n    margin: 0,\n    marginTop: '20px',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    listStyle: 'none',\n    position: 'relative',\n    boxSizing: 'border-box',\n    zIndex: 3\n  },\n  alertActions_li_button: {\n    textTransform: 'uppercase',\n    color: '#fff',\n    border: 'none',\n    overflow: 'hidden',\n    height: '45px',\n    padding: '0 20px',\n    outline: 'none',\n    boxShadow: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontWeight: 'bold',\n    margin: 0,\n    boxSizing: 'border-box'\n  },\n  cancelBtn: {\n    textTransform: 'uppercase',\n    border: 'none',\n    overflow: 'hidden',\n    height: '45px',\n    padding: '0 20px',\n    outline: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    boxSizing: 'border-box',\n    color: '#333',\n    background: 'transparent',\n    boxShadow: 'none',\n    fontWeight: 400,\n    margin: 0\n  },\n  closeAlert: { opacity: '0', pointerEvents: 'none' },\n  openAlert: { opacity: '1', pointerEvents: 'all' },\n  openContent: {\n    opacity: '1',\n    transform: 'scale(1)'\n  },\n  closeContent: {\n    opacity: '0',\n    transform: 'scale(0.6)'\n  }\n}\n\n// ALERT PROPS\ninterface AlertProps {\n  type: 'confirm' | 'window' | 'alert' | 'error'\n  customElements?: JSX.Element\n  confirmBtn?: JSX.Element\n  cancelBtn?: JSX.Element\n  onConfirm?: () => any\n  confirmText?: string\n  cancelText?: string\n  onHide?: () => any\n  fixed?: boolean\n  title: string\n  body: string\n}\n\n// HOC PROPS\ninterface HOCProps {\n  confirmColor?: string\n  confirmText?: string\n  cancelText?: string\n  errColor?: string\n  blurred?: boolean\n}\n\n// ALERT STATE\ninterface InternalState extends AlertProps {\n  open: boolean\n}\n\n// DEFAULT STATE\nconst defState: InternalState = {\n  customElements: undefined,\n  confirmText: undefined,\n  cancelText: undefined,\n  confirmBtn: undefined,\n  onConfirm: undefined,\n  cancelBtn: undefined,\n  onHide: undefined,\n  fixed: undefined,\n  type: 'alert',\n  open: false,\n  title: '',\n  body: ''\n}\n\n// TEMPLATE\nclass AlertTemplate extends PureComponent<HOCProps, InternalState> {\n  constructor(props: HOCProps) {\n    super(props)\n\n    // STATE\n    this.state = defState\n\n    // METHODS\n    this.show = this.show.bind(this)\n    this.hide = this.hide.bind(this)\n    this.forceHide = this.forceHide.bind(this)\n    this.confirm = this.confirm.bind(this)\n  }\n\n  // SHOW ALERT\n  public show(props: AlertProps | string) {\n    if (typeof props === 'string')\n      this.setState({\n        ...defState,\n        type: 'alert',\n        title: '',\n        body: props,\n        open: true\n      })\n    else this.setState({ ...defState, ...props, open: true })\n  }\n\n  // HIDE ALERT\n  public hide() {\n    if (!this.state.fixed) {\n      if (this.state.onHide) this.state.onHide()\n      this.setState({ open: false })\n    }\n  }\n\n  // FORCE TO HIDE\n  public forceHide() {\n    this.setState({ open: false })\n    setTimeout(() => {\n      this.setState({ ...defState })\n    }, 300)\n  }\n\n  // CONFIRM\n  private confirm() {\n    if (this.state.onConfirm) this.state.onConfirm()\n    this.hide()\n  }\n\n  // COMPONENT\n  render() {\n    return (\n      <div\n        onClick={this.state.type === 'window' ? this.hide : undefined}\n        style={\n          this.state.open\n            ? {\n                ...Styles.alertContainer,\n                ...Styles.openAlert,\n                backdropFilter: this.props.blurred ? 'blur(3px)' : 'none'\n              }\n            : {\n                ...Styles.alertContainer,\n                ...Styles.closeAlert,\n                backdropFilter: this.props.blurred ? 'blur(3px)' : 'none'\n              }\n        }\n      >\n        <div\n          style={\n            this.state.open\n              ? {\n                  ...Styles.alertContent,\n                  ...Styles.openContent\n                }\n              : {\n                  ...Styles.alertContent,\n                  ...Styles.closeContent\n                }\n          }\n        >\n          {this.state.type !== 'alert' && (\n            <h1 style={Styles.alertContent_h1}>{this.state.title}</h1>\n          )}\n          <p\n            style={{\n              ...Styles.alertContent_p,\n              fontSize: this.state.type === 'alert' ? '1.2em' : '1em'\n            }}\n          >\n            {this.state.body}\n          </p>\n          {this.state.customElements}\n\n          {this.state.type !== 'window' && (\n            <ul style={Styles.alertActions}>\n              {!this.state.fixed && this.state.type === 'confirm' && (\n                <li>\n                  {!this.state.cancelBtn ? (\n                    <button onClick={this.hide} style={Styles.cancelBtn}>\n                      {this.state.cancelText ||\n                        this.props.cancelText ||\n                        'Cancel'}\n                    </button>\n                  ) : (\n                    <div onClick={this.hide}>{this.state.cancelBtn}</div>\n                  )}\n                </li>\n              )}\n              <li>\n                {!this.state.confirmBtn ? (\n                  <button\n                    style={{\n                      ...Styles.alertActions_li_button,\n                      background:\n                        this.state.type === 'error'\n                          ? this.props.errColor || '#ff5252'\n                          : this.props.confirmColor || '#2196f3'\n                    }}\n                    onClick={this.confirm}\n                  >\n                    {' '}\n                    {this.state.confirmText ||\n                      this.props.confirmText ||\n                      'Accept'}\n                  </button>\n                ) : (\n                  <div onClick={this.confirm}>{this.state.confirmBtn}</div>\n                )}\n              </li>\n            </ul>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\n// GENERAL HOC\nconst withAlerts = (Component: React.FC<any>, props?: HOCProps) => {\n  // EMPTY ALERTS\n  const emptyAlert = () => null\n\n  // COMPONENT\n  const withAlertsComponent: React.FC = () => {\n    return (\n      <React.Fragment>\n        <Component />\n        <AlertTemplate\n          {...props}\n          ref={(AlertRef) => {\n            window.Alert = AlertRef?.show || emptyAlert\n            window.hideAlert = AlertRef?.forceHide || emptyAlert\n          }}\n        />\n      </React.Fragment>\n    )\n  }\n\n  // RENDER\n  return withAlertsComponent\n}\n\nexport default withAlerts\n\n// TYPESCRIPT GLOBAL DEFINITIONS\ndeclare global {\n  interface Window {\n    Alert: (props: AlertProps | string) => any\n    hideAlert: () => any\n  }\n}\n","import React from 'react'\n\nimport withAlerts from 'lualert'\n\nconst App = () => {\n  return <button onClick={() => window.Alert('Hello world')}>Show</button>\n}\n\nexport default withAlerts(App)\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}